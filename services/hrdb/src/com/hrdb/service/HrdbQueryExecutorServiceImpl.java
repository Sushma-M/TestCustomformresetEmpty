/*Copyright (c) 2015-2016 wavemaker-com All Rights Reserved.
 This software is the confidential and proprietary information of wavemaker-com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with wavemaker-com*/

package com.hrdb.service;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/

import java.util.HashMap;
import java.util.Map;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Qualifier;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import com.wavemaker.runtime.data.dao.query.WMQueryExecutor;

import com.hrdb.models.query.InsertDataintoUserRequest;

@Service
public class HrdbQueryExecutorServiceImpl implements HrdbQueryExecutorService {

    private static final Logger LOGGER = LoggerFactory.getLogger(HrdbQueryExecutorServiceImpl.class);

    @Autowired
    @Qualifier("hrdbWMQueryExecutor")
    private WMQueryExecutor queryExecutor;

    @Transactional(value = "hrdbTransactionManager")
    @Override
    public Integer executeInsertDataintoUSer(InsertDataintoUserRequest insertDataintoUserRequest) {
        Map params = new HashMap(4);

        params.put("USERNAME", insertDataintoUserRequest.getUsername());
        params.put("PASSWORD", insertDataintoUserRequest.getPassword());
        params.put("ROLE", insertDataintoUserRequest.getRole());
        params.put("TENANT_ID", insertDataintoUserRequest.getTenantId());

        return queryExecutor.executeNamedQueryForUpdate("insertDataintoUSer", params);
    }

}


